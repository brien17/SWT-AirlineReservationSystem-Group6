import javax.swing.*;

public class Main extends javax.swing.JFrame {

  /** Creates new form Main */
  public Main() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jDesktopPane1 = new javax.swing.JDesktopPane();
    jMenuBar1 = new javax.swing.JMenuBar();
    customerMenu = new javax.swing.JMenu();
    addCustomerMenuItem = new javax.swing.JMenuItem();
    searchCustomerMenuItem = new javax.swing.JMenuItem();
    ticketMenu = new javax.swing.JMenu();
    bookTicketMenuItem = new javax.swing.JMenuItem();
    ticketReportMenuItem = new javax.swing.JMenuItem();
    flightMenu = new javax.swing.JMenu();
    addFlightMenuItem = new javax.swing.JMenuItem();
    userMenu = new javax.swing.JMenu();
    userCreationMenuItem = new javax.swing.JMenuItem();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setPreferredSize(new java.awt.Dimension(1366, 768));

    javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
    jDesktopPane1.setLayout(jDesktopPane1Layout);
    jDesktopPane1Layout.setHorizontalGroup(
        jDesktopPane1Layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE));
    jDesktopPane1Layout.setVerticalGroup(
        jDesktopPane1Layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE));

    customerMenu.setText("Customer");

    addCustomerMenuItem.setText("Add Customer");
    addCustomerMenuItem.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            addCustomerButtonClicked(evt);
          }
        });
    customerMenu.add(addCustomerMenuItem);

    searchCustomerMenuItem.setText("Search Customer");
    searchCustomerMenuItem.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchCustomerButtonClicked(evt);
          }
        });
    customerMenu.add(searchCustomerMenuItem);

    jMenuBar1.add(customerMenu);

    ticketMenu.setText("Tickets");

    bookTicketMenuItem.setText("Book Ticket");
    bookTicketMenuItem.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            bookTicketButtonClicked(evt);
          }
        });
    ticketMenu.add(bookTicketMenuItem);

    ticketReportMenuItem.setText("Ticket Report");
    ticketReportMenuItem.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            ticketReportButtonClicked(evt);
          }
        });
    ticketMenu.add(ticketReportMenuItem);

    jMenuBar1.add(ticketMenu);

    flightMenu.setText("Flight");

    addFlightMenuItem.setText("Add Flight");
    addFlightMenuItem.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            addFlightButtonClicked(evt);
          }
        });
    flightMenu.add(addFlightMenuItem);

    jMenuBar1.add(flightMenu);

    userMenu.setText("User");

    userCreationMenuItem.setText("Add User");
    userCreationMenuItem.addActionListener(
        new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            createUserButtonClicked(evt);
          }
        });
    userMenu.add(userCreationMenuItem);

    jMenuBar1.add(userMenu);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1));
    layout.setVerticalGroup(
        layout
            .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1));

    pack();
  } // </editor-fold>//GEN-END:initComponents

  /**
   * This method runs when the add customer button is clicked, it creates a new instance of the
   * CustomerCreationController class and passes it into the showCustomerCreation method.
   *
   * @param evt The click event provided by the user clicking the button
   */
  void addCustomerButtonClicked(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jMenuItem1ActionPerformed

    CustomerCreationController cus = new CustomerCreationController();
    showCustomerCreation(cus);
  } // GEN-LAST:event_jMenuItem1ActionPerformed

  /**
   * This method takes in instance of the CustomerCreationController class and adds it to the desktop pane and sets its
   * visibility true
   * @param customerCreationController The instance to add to the desktop pane and make visible
   */
  void showCustomerCreation(CustomerCreationController customerCreationController) {
    try {
      jDesktopPane1.add(customerCreationController);
      customerCreationController.setVisible(true);
    } catch (NullPointerException np) {
      customerCreationController.setVisible(true);
    }
  }

  /**
   * This method runs when the search customer button is clicked, it creates a new instance of the
   * CustomerSearchController class and passes it into the showSearchCustomer method.
   *
   * @param evt The click event provided by the user clicking the button
   */
  void searchCustomerButtonClicked(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jMenuItem2ActionPerformed

    CustomerSearchController scus = new CustomerSearchController();
    showSearchCustomer(scus);
  } // GEN-LAST:event_jMenuItem2ActionPerformed

  /**
   * This method takes in instance of the CustomerSearchController class and adds it to the desktop pane and sets its
   * visibility true.
   * @param customerSearchController The instance to add to the desktop pane and make visible
   */
  void showSearchCustomer(CustomerSearchController customerSearchController) {
    try {
      jDesktopPane1.add(customerSearchController);
      customerSearchController.setVisible(true);
    } catch (NullPointerException np) {
      customerSearchController.setVisible(true);
    }
  }

  /**
   * This method runs when the add flight button is clicked, it creates a new instance of the
   * FlightAdditionController class and passes it into the showAddFlight method.
   *
   * @param evt The click event provided by the user clicking the button
   */
  void addFlightButtonClicked(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jMenuItem4ActionPerformed

    FlightAdditionController f = new FlightAdditionController();
    showAddFlight(f);
  } // GEN-LAST:event_jMenuItem4ActionPerformed

  /**
   * This method takes in instance of the FlightAdditionController class and adds it to the desktop pane and sets its
   * visibility true.
   * @param flightAdditionController The instance to add to the desktop pane and make visible
   */
  void showAddFlight(FlightAdditionController flightAdditionController) {
    try{
      jDesktopPane1.add(flightAdditionController);
      flightAdditionController.setVisible(true);
    } catch (NullPointerException np) {
      flightAdditionController.setVisible(true);

    }
  }

  /**
   * This method runs when the book ticket button is clicked, it creates a new instance of the
   * TicketController class and passes it into the showBookTicket method.
   *
   * @param evt The click event provided by the user clicking the button
   */
  void bookTicketButtonClicked(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jMenuItem3ActionPerformed

    TicketController t = new TicketController();
    showBookTicket(t);
  } // GEN-LAST:event_jMenuItem3ActionPerformed

  /**
   * This method takes in instance of the TicketController class and adds it to the desktop pane and sets its
   * visibility true.
   * @param ticketController The instance to add to the desktop pane and make visible
   */
  void showBookTicket(TicketController ticketController) {
    try {
      jDesktopPane1.add(ticketController);
      ticketController.setVisible(true);
    } catch (NullPointerException np) {
      ticketController.setVisible(true);
    }
  }


  /**
   * This method runs when the search ticket report button is clicked, it creates a new instance of
   * the TicketReportController class and passes it into the showTicketReport method.
   *
   * @param evt The click event provided by the user clicking the button
   */
  void ticketReportButtonClicked(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jMenuItem6ActionPerformed

    TicketReportController ti = new TicketReportController();
    showTicketReport(ti);
  } // GEN-LAST:event_jMenuItem6ActionPerformed

  /**
   * This method takes in instance of the TicketReportController class and adds it to the desktop pane and sets its
   * visibility true.
   * @param ticketReportController The instance to add to the desktop pane and make visible
   */
  void showTicketReport(TicketReportController ticketReportController) {
    try {
      jDesktopPane1.add(ticketReportController);
      ticketReportController.setVisible(true);
    } catch (NullPointerException np) {
      ticketReportController.setVisible(true);

    }
  }

  /**
   * This method runs when the create user button is clicked, it creates a new instance of the
   * UserCreationController class and passes it into the showCreateUserScreen method.
   *
   * @param evt The click event provided by the user clicking the button
   */
  void createUserButtonClicked(
      java.awt.event.ActionEvent evt) { // GEN-FIRST:event_jMenuItem5ActionPerformed

    UserCreationController u = new UserCreationController();
    showCreateUserScreen(u);
  } // GEN-LAST:event_jMenuItem5ActionPerformed

  /**
   * This method takes in instance of the UserCreationController class and adds it to the desktop pane and sets its
   * visibility true.
   * @param userCreationController The instance to add to the desktop pane and make visible
   */
  void showCreateUserScreen(UserCreationController userCreationController) {
    try {
      jDesktopPane1.add(userCreationController);
      userCreationController.setVisible(true);
    } catch (NullPointerException np) {
      userCreationController.setVisible(true);

    }
  }

  /** @param args the command line arguments */
  public static void main(String[] args) throws ClassNotFoundException, UnsupportedLookAndFeelException, InstantiationException, IllegalAccessException {
      for (javax.swing.UIManager.LookAndFeelInfo info :
          javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
        }
      }

    // </editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(
        new Runnable() {
          public void run() {
            new Main().setVisible(true);
          }
        });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  javax.swing.JDesktopPane jDesktopPane1;
  private javax.swing.JMenu customerMenu;
  private javax.swing.JMenu ticketMenu;
  private javax.swing.JMenu flightMenu;
  private javax.swing.JMenu userMenu;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JMenuItem addCustomerMenuItem;
  private javax.swing.JMenuItem searchCustomerMenuItem;
  private javax.swing.JMenuItem bookTicketMenuItem;
  private javax.swing.JMenuItem addFlightMenuItem;
  private javax.swing.JMenuItem userCreationMenuItem;
  private javax.swing.JMenuItem ticketReportMenuItem;
  // End of variables declaration//GEN-END:variables
}